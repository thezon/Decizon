;; Analyzed by ClojureScript 0.0-3291
{:use-macros nil, :excludes #{iter}, :name datascript.btset, :imports nil, :requires {shim datascript.shim, datascript.shim datascript.shim}, :uses nil, :defs {-next-path {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 610, :column 7, :end-line 610, :end-column 17, :arglists (quote ([node path level]))}, :name datascript.btset/-next-path, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 17, :method-params ([node path level]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 610, :end-line 610, :max-fixed-arity 3, :fn-var true, :arglists (quote ([node path level]))}, node-len {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 258, :column 4, :end-line 258, :end-column 12, :protocol datascript.btset/INode, :doc nil, :arglists (quote ([_]))}, :protocol datascript.btset/INode, :name datascript.btset/node-len, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 12, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 256, :end-line 258, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, alast {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 97, :column 7, :end-line 97, :end-column 12, :arglists (quote ([arr]))}, :name datascript.btset/alast, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 12, :method-params ([arr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arr]))}, distance {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 918, :column 7, :end-line 918, :end-column 15, :arglists (quote ([set path-l path-r]))}, :name datascript.btset/distance, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 15, :method-params ([set path-l path-r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 918, :end-line 918, :max-fixed-arity 3, :fn-var true, :arglists (quote ([set path-l path-r]))}, ->Iter {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 693, :column 10, :end-line 693, :end-column 14, :protocols #{cljs.core/IReversible cljs.core/IChunkedNext cljs.core/ISeq cljs.core/INext cljs.core/ISeqable cljs.core/IChunkedSeq cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/IReversible cljs.core/IChunkedNext cljs.core/ISeq cljs.core/INext cljs.core/ISeqable cljs.core/IChunkedSeq cljs.core/IReduce}, :factory :positional, :arglists (quote ([set left right keys idx]))}, :protocols #{cljs.core/IReversible cljs.core/IChunkedNext cljs.core/ISeq cljs.core/INext cljs.core/ISeqable cljs.core/IChunkedSeq cljs.core/IReduce}, :name datascript.btset/->Iter, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 14, :method-params ([set left right keys idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 693, :end-line 693, :max-fixed-arity 5, :fn-var true, :arglists (quote ([set left right keys idx])), :skip-protocol-flag #{cljs.core/IReversible cljs.core/IChunkedNext cljs.core/ISeq cljs.core/INext cljs.core/ISeqable cljs.core/IChunkedSeq cljs.core/IReduce}}, path-get {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 49, :column 7, :end-line 49, :end-column 15, :arglists (quote ([path level]))}, :name datascript.btset/path-get, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 15, :method-params ([path level]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path level]))}, iter-reduce {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 797, :column 7, :end-line 797, :end-column 18, :arglists (quote ([iter f] [iter f start])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([iter f] [iter f start]), :arglists ([iter f] [iter f start]), :arglists-meta (nil nil)}}, :name datascript.btset/iter-reduce, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([iter f] [iter f start]), :arglists ([iter f] [iter f start]), :arglists-meta (nil nil)}, :method-params ([iter f] [iter f start]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 797, :end-line 797, :max-fixed-arity 3, :fn-var true, :arglists ([iter f] [iter f start])}, min-len {:name datascript.btset/min-len, :file "resources\\public\\js\\datascript\\btset.cljc", :line 39, :column 1, :end-line 39, :end-column 21, :const true, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 39, :column 14, :end-line 39, :end-column 21, :const true}}, iter {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 746, :column 7, :end-line 746, :end-column 11, :arglists (quote ([set left right]))}, :name datascript.btset/iter, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 11, :method-params ([set left right]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 746, :end-line 746, :max-fixed-arity 3, :fn-var true, :arglists (quote ([set left right]))}, -rseek {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 949, :column 7, :end-line 949, :end-column 13, :arglists (quote ([set key])), :doc "Returns path to the first element that is > key.\n   If all elements in a set are <= key, returns `(-rpath set) + 1`.\n   It’s a virtual path that is bigger than any path in a tree"}, :name datascript.btset/-rseek, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 13, :method-params ([set key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 949, :end-line 949, :max-fixed-arity 2, :fn-var true, :arglists (quote ([set key])), :doc "Returns path to the first element that is > key.\n   If all elements in a set are <= key, returns `(-rpath set) + 1`.\n   It’s a virtual path that is bigger than any path in a tree"}, sorted-arr-distinct {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 212, :column 8, :end-line 212, :end-column 27, :private true, :arglists (quote ([arr cmp])), :doc "Filter out repetitive values in a sorted array.\n   Optimized for no-duplicates case"}, :private true, :name datascript.btset/sorted-arr-distinct, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 27, :method-params ([arr cmp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 212, :end-line 212, :max-fixed-arity 2, :fn-var true, :arglists (quote ([arr cmp])), :doc "Filter out repetitive values in a sorted array.\n   Optimized for no-duplicates case"}, -seek {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 931, :column 7, :end-line 931, :end-column 12, :arglists (quote ([set key])), :doc "Returns path to first element >= key,\n   or -1 if all elements in a set < key"}, :name datascript.btset/-seek, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 12, :method-params ([set key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 931, :end-line 931, :max-fixed-arity 2, :fn-var true, :arglists (quote ([set key])), :doc "Returns path to first element >= key,\n   or -1 if all elements in a set < key"}, node-merge-n-split {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 260, :column 4, :end-line 260, :end-column 22, :protocol datascript.btset/INode, :doc nil, :arglists (quote ([_ next]))}, :protocol datascript.btset/INode, :name datascript.btset/node-merge-n-split, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 22, :method-params ([_ next]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 256, :end-line 260, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ next])), :doc nil}, iter-chunked-next {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 780, :column 7, :end-line 780, :end-column 24, :arglists (quote ([iter]))}, :name datascript.btset/iter-chunked-next, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 24, :method-params ([iter]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 780, :end-line 780, :max-fixed-arity 1, :fn-var true, :arglists (quote ([iter]))}, BTSet {:num-fields 6, :protocols #{cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/ISet cljs.core/IEmptyableCollection datascript.btset/Object cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/ILookup cljs.core/IReduce}, :name datascript.btset/BTSet, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 15, :type true, :column 10, :line 410, :record false, :end-line 410, :skip-protocol-flag #{cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/ISet cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/ILookup cljs.core/IReduce}}, node-lookup {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 261, :column 4, :end-line 261, :end-column 15, :protocol datascript.btset/INode, :doc nil, :arglists (quote ([_ cmp key]))}, :protocol datascript.btset/INode, :name datascript.btset/node-lookup, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 15, :method-params ([_ cmp key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 256, :end-line 261, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ cmp key])), :doc nil}, riter-first {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 872, :column 7, :end-line 872, :end-column 18, :arglists (quote ([riter]))}, :name datascript.btset/riter-first, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 18, :method-params ([riter]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 872, :end-line 872, :max-fixed-arity 1, :fn-var true, :arglists (quote ([riter]))}, btset-disj {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 587, :column 7, :end-line 587, :end-column 17, :arglists (quote ([set key cmp]))}, :name datascript.btset/btset-disj, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 17, :method-params ([set key cmp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 587, :end-line 587, :max-fixed-arity 3, :fn-var true, :arglists (quote ([set key cmp]))}, cut {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 111, :column 7, :end-line 111, :end-column 10, :arglists (quote ([arr cut-from] [arr cut-from cut-to])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([arr cut-from] [arr cut-from cut-to]), :arglists ([arr cut-from] [arr cut-from cut-to]), :arglists-meta (nil nil)}}, :name datascript.btset/cut, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([arr cut-from] [arr cut-from cut-to]), :arglists ([arr cut-from] [arr cut-from cut-to]), :arglists-meta (nil nil)}, :method-params ([arr cut-from] [arr cut-from cut-to]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 3, :fn-var true, :arglists ([arr cut-from] [arr cut-from cut-to])}, node-merge {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 259, :column 4, :end-line 259, :end-column 14, :protocol datascript.btset/INode, :doc nil, :arglists (quote ([_ next]))}, :protocol datascript.btset/INode, :name datascript.btset/node-merge, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 14, :method-params ([_ next]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 256, :end-line 259, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ next])), :doc nil}, keys-for {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 557, :column 7, :end-line 557, :end-column 15, :arglists (quote ([set path]))}, :name datascript.btset/keys-for, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 15, :method-params ([set path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 557, :end-line 557, :max-fixed-arity 2, :fn-var true, :arglists (quote ([set path]))}, -slice {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 968, :column 7, :end-line 968, :end-column 13, :arglists (quote ([set key-from key-to]))}, :name datascript.btset/-slice, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 13, :method-params ([set key-from key-to]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 968, :end-line 968, :max-fixed-arity 3, :fn-var true, :arglists (quote ([set key-from key-to]))}, max-len {:name datascript.btset/max-len, :file "resources\\public\\js\\datascript\\btset.cljc", :line 40, :column 1, :end-line 40, :end-column 21, :const true, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 40, :column 14, :end-line 40, :end-column 21, :const true}}, btset {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 1007, :column 7, :end-line 1007, :end-column 12, :arglists (quote ([] [& keys])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params ([]), :arglists ([] [& keys]), :arglists-meta (nil nil)}}, :name datascript.btset/btset, :variadic true, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params ([]), :arglists ([] [& keys]), :arglists-meta (nil nil)}, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1007, :end-line 1007, :max-fixed-arity 0, :fn-var true, :arglists ([] [& keys])}, iter-rseq {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 790, :column 7, :end-line 790, :end-column 16, :arglists (quote ([iter]))}, :name datascript.btset/iter-rseq, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 16, :method-params ([iter]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 790, :end-line 790, :max-fixed-arity 1, :fn-var true, :arglists (quote ([iter]))}, -rpath {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 637, :column 7, :end-line 637, :end-column 13, :arglists (quote ([node level])), :doc "Returns rightmost path possible starting from node and going deeper"}, :name datascript.btset/-rpath, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 13, :method-params ([node level]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 637, :end-line 637, :max-fixed-arity 2, :fn-var true, :arglists (quote ([node level])), :doc "Returns rightmost path possible starting from node and going deeper"}, btset-by {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 1002, :column 7, :end-line 1002, :end-column 15, :arglists (quote ([cmp] [cmp & keys])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params ([cmp]), :arglists ([cmp] [cmp & keys]), :arglists-meta (nil nil)}}, :name datascript.btset/btset-by, :variadic true, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params ([cmp]), :arglists ([cmp] [cmp & keys]), :arglists-meta (nil nil)}, :method-params ([cmp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1002, :end-line 1002, :max-fixed-arity 1, :fn-var true, :arglists ([cmp] [cmp & keys])}, eq-arr {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 148, :column 16, :end-line 148, :end-column 22, :tag boolean, :arglists (quote ([cmp a1 a1-from a1-to a2 a2-from a2-to]))}, :name datascript.btset/eq-arr, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 22, :method-params ([cmp a1 a1-from a1-to a2 a2-from a2-to]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :ret-tag boolean, :end-line 148, :max-fixed-arity 7, :tag boolean, :fn-var true, :arglists (quote ([cmp a1 a1-from a1-to a2 a2-from a2-to]))}, ->ReverseIter {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 832, :column 10, :end-line 832, :end-column 21, :protocols #{cljs.core/IReversible cljs.core/ISeq cljs.core/INext cljs.core/ISeqable}, :skip-protocol-flag #{cljs.core/IReversible cljs.core/ISeq cljs.core/INext cljs.core/ISeqable}, :factory :positional, :arglists (quote ([set left right keys idx]))}, :protocols #{cljs.core/IReversible cljs.core/ISeq cljs.core/INext cljs.core/ISeqable}, :name datascript.btset/->ReverseIter, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 21, :method-params ([set left right keys idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 832, :end-line 832, :max-fixed-arity 5, :fn-var true, :arglists (quote ([set left right keys idx])), :skip-protocol-flag #{cljs.core/IReversible cljs.core/ISeq cljs.core/INext cljs.core/ISeqable}}, -prev-path {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 651, :column 7, :end-line 651, :end-column 17, :arglists (quote ([node path level]))}, :name datascript.btset/-prev-path, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 17, :method-params ([node path level]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 651, :end-line 651, :max-fixed-arity 3, :fn-var true, :arglists (quote ([node path level]))}, -btset-from-seq {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 998, :column 7, :end-line 998, :end-column 22, :arglists (quote ([seq cmp]))}, :name datascript.btset/-btset-from-seq, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 22, :method-params ([seq cmp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 998, :end-line 998, :max-fixed-arity 2, :fn-var true, :arglists (quote ([seq cmp]))}, merge-n-split {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 129, :column 7, :end-line 129, :end-column 20, :arglists (quote ([a1 a2]))}, :name datascript.btset/merge-n-split, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 20, :method-params ([a1 a2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a1 a2]))}, insert {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 126, :column 7, :end-line 126, :end-column 13, :arglists (quote ([arr idx xs]))}, :name datascript.btset/insert, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 13, :method-params ([arr idx xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 3, :fn-var true, :arglists (quote ([arr idx xs]))}, riter {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 869, :column 7, :end-line 869, :end-column 12, :arglists (quote ([set left right]))}, :name datascript.btset/riter, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 12, :method-params ([set left right]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 869, :end-line 869, :max-fixed-arity 3, :fn-var true, :arglists (quote ([set left right]))}, iter-chunk {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 768, :column 7, :end-line 768, :end-column 17, :arglists (quote ([iter]))}, :name datascript.btset/iter-chunk, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 17, :method-params ([iter]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 768, :end-line 768, :max-fixed-arity 1, :fn-var true, :arglists (quote ([iter]))}, level-shift {:name datascript.btset/level-shift, :file "resources\\public\\js\\datascript\\btset.cljc", :line 42, :column 1, :end-line 42, :end-column 25, :const true, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 42, :column 14, :end-line 42, :end-column 25, :const true}}, splice {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 123, :column 7, :end-line 123, :end-column 13, :arglists (quote ([arr splice-from splice-to xs]))}, :name datascript.btset/splice, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 13, :method-params ([arr splice-from splice-to xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 123, :end-line 123, :max-fixed-arity 4, :fn-var true, :arglists (quote ([arr splice-from splice-to xs]))}, iter-next {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 753, :column 7, :end-line 753, :end-column 16, :arglists (quote ([iter]))}, :name datascript.btset/iter-next, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 16, :method-params ([iter]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 753, :end-line 753, :max-fixed-arity 1, :fn-var true, :arglists (quote ([iter]))}, ReverseIter {:num-fields 5, :protocols #{cljs.core/IReversible cljs.core/ISeq cljs.core/INext cljs.core/ISeqable}, :name datascript.btset/ReverseIter, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 21, :type true, :column 10, :line 832, :record false, :end-line 832, :skip-protocol-flag #{cljs.core/IReversible cljs.core/ISeq cljs.core/INext cljs.core/ISeqable}}, node-lim-key {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 257, :column 4, :end-line 257, :end-column 16, :protocol datascript.btset/INode, :doc nil, :arglists (quote ([_]))}, :protocol datascript.btset/INode, :name datascript.btset/node-lim-key, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 16, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 256, :end-line 257, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, INode {:meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 256, :column 14, :end-line 256, :end-column 19, :doc nil, :protocol-symbol true, :protocol-info {:methods {node-lim-key [[_]], node-len [[_]], node-merge [[_ next]], node-merge-n-split [[_ next]], node-lookup [[_ cmp key]], node-conj [[_ cmp key]], node-disj [[_ cmp key root? left right]]}}}, :protocol-symbol true, :name datascript.btset/INode, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 19, :column 1, :line 256, :protocol-info {:methods {node-lim-key [[_]], node-len [[_]], node-merge [[_ next]], node-merge-n-split [[_ next]], node-lookup [[_ cmp key]], node-conj [[_ cmp key]], node-disj [[_ cmp key root? left right]]}}, :info nil, :end-line 256, :impls #{datascript.btset/Node datascript.btset/Leaf}, :doc nil}, next-path {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 631, :column 7, :end-line 631, :end-column 16, :arglists (quote ([set path])), :doc "Returns path representing next item after `path` in natural traversal order,\n   or -1 if end of tree has been reached"}, :name datascript.btset/next-path, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 16, :method-params ([set path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 631, :end-line 631, :max-fixed-arity 2, :fn-var true, :arglists (quote ([set path])), :doc "Returns path representing next item after `path` in natural traversal order,\n   or -1 if end of tree has been reached"}, riter-rseq {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 891, :column 7, :end-line 891, :end-column 17, :arglists (quote ([riter]))}, :name datascript.btset/riter-rseq, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 17, :method-params ([riter]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 891, :end-line 891, :max-fixed-arity 1, :fn-var true, :arglists (quote ([riter]))}, binary-search-r {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 69, :column 7, :end-line 69, :end-column 22, :arglists (quote ([cmp arr r k]))}, :name datascript.btset/binary-search-r, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 22, :method-params ([cmp arr r k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 4, :fn-var true, :arglists (quote ([cmp arr r k]))}, prev-path {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 675, :column 7, :end-line 675, :end-column 16, :arglists (quote ([set path])), :doc "Returns path representing previous item before `path` in natural traversal order,\n   or -1 if `path` was already beginning of a tree"}, :name datascript.btset/prev-path, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 16, :method-params ([set path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 675, :end-line 675, :max-fixed-arity 2, :fn-var true, :arglists (quote ([set path])), :doc "Returns path representing previous item before `path` in natural traversal order,\n   or -1 if `path` was already beginning of a tree"}, node-conj {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 262, :column 4, :end-line 262, :end-column 13, :protocol datascript.btset/INode, :doc nil, :arglists (quote ([_ cmp key]))}, :protocol datascript.btset/INode, :name datascript.btset/node-conj, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 13, :method-params ([_ cmp key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 256, :end-line 262, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ cmp key])), :doc nil}, ->Leaf {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 350, :column 10, :end-line 350, :end-column 14, :protocols #{datascript.btset/INode}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([keys]))}, :protocols #{datascript.btset/INode}, :name datascript.btset/->Leaf, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 14, :method-params ([keys]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 350, :end-line 350, :max-fixed-arity 1, :fn-var true, :arglists (quote ([keys])), :skip-protocol-flag nil}, empty-path {:name datascript.btset/empty-path, :file "resources\\public\\js\\datascript\\btset.cljc", :line 47, :column 1, :end-line 47, :end-column 30, :tag long, :const true, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 47, :column 20, :end-line 47, :end-column 30, :tag long, :const true}}, alter-btset {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 554, :column 7, :end-line 554, :end-column 18, :arglists (quote ([set root shift cnt]))}, :name datascript.btset/alter-btset, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 18, :method-params ([set root shift cnt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 554, :end-line 554, :max-fixed-arity 4, :fn-var true, :arglists (quote ([set root shift cnt]))}, btset-iter {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 685, :column 7, :end-line 685, :end-column 17, :arglists (quote ([set])), :doc "Iterator that represents whole set"}, :name datascript.btset/btset-iter, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 17, :method-params ([set]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 685, :end-line 685, :max-fixed-arity 1, :fn-var true, :arglists (quote ([set])), :doc "Iterator that represents whole set"}, path-mask {:name datascript.btset/path-mask, :file "resources\\public\\js\\datascript\\btset.cljc", :line 46, :column 1, :end-line 46, :end-column 23, :const true, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 46, :column 14, :end-line 46, :end-column 23, :const true}}, -distance {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 904, :column 7, :end-line 904, :end-column 16, :arglists (quote ([node left right level]))}, :name datascript.btset/-distance, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 16, :method-params ([node left right level]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 904, :end-line 904, :max-fixed-arity 4, :fn-var true, :arglists (quote ([node left right level]))}, btset-conj {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 566, :column 7, :end-line 566, :end-column 17, :arglists (quote ([set key cmp]))}, :name datascript.btset/btset-conj, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 17, :method-params ([set key cmp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 566, :end-line 566, :max-fixed-arity 3, :fn-var true, :arglists (quote ([set key cmp]))}, est-count {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 925, :column 7, :end-line 925, :end-column 16, :arglists (quote ([iter]))}, :name datascript.btset/est-count, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 16, :method-params ([iter]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 925, :end-line 925, :max-fixed-arity 1, :fn-var true, :arglists (quote ([iter]))}, path-set {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 53, :column 7, :end-line 53, :end-column 15, :arglists (quote ([path level idx]))}, :name datascript.btset/path-set, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 15, :method-params ([path level idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 3, :fn-var true, :arglists (quote ([path level idx]))}, cut-n-splice {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 100, :column 7, :end-line 100, :end-column 19, :arglists (quote ([arr cut-from cut-to splice-from splice-to xs]))}, :name datascript.btset/cut-n-splice, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 19, :method-params ([arr cut-from cut-to splice-from splice-to xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 6, :fn-var true, :arglists (quote ([arr cut-from cut-to splice-from splice-to xs]))}, riter-next {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 876, :column 7, :end-line 876, :end-column 17, :arglists (quote ([ri]))}, :name datascript.btset/riter-next, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 17, :method-params ([ri]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 876, :end-line 876, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ri]))}, ->BTSet {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 410, :column 10, :end-line 410, :end-column 15, :protocols #{cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/ISet cljs.core/IEmptyableCollection datascript.btset/Object cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/ILookup cljs.core/IReduce}, :skip-protocol-flag #{cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/ISet cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/ILookup cljs.core/IReduce}, :factory :positional, :arglists (quote ([root shift cnt comparator meta __hash]))}, :protocols #{cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/ISet cljs.core/IEmptyableCollection datascript.btset/Object cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/ILookup cljs.core/IReduce}, :name datascript.btset/->BTSet, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 15, :method-params ([root shift cnt comparator meta __hash]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 410, :end-line 410, :max-fixed-arity 6, :fn-var true, :arglists (quote ([root shift cnt comparator meta __hash])), :skip-protocol-flag #{cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/ISet cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/ILookup cljs.core/IReduce}}, -btset-from-sorted-arr {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 984, :column 7, :end-line 984, :end-column 29, :arglists (quote ([arr cmp]))}, :name datascript.btset/-btset-from-sorted-arr, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 29, :method-params ([arr cmp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 984, :end-line 984, :max-fixed-arity 2, :fn-var true, :arglists (quote ([arr cmp]))}, avg-len {:name datascript.btset/avg-len, :file "resources\\public\\js\\datascript\\btset.cljc", :line 41, :column 1, :end-line 41, :end-column 21, :const true, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 41, :column 14, :end-line 41, :end-column 21, :const true}}, ->Node {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 294, :column 10, :end-line 294, :end-column 14, :protocols #{datascript.btset/INode}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([keys pointers]))}, :protocols #{datascript.btset/INode}, :name datascript.btset/->Node, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 14, :method-params ([keys pointers]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 294, :end-line 294, :max-fixed-arity 2, :fn-var true, :arglists (quote ([keys pointers])), :skip-protocol-flag nil}, Leaf {:num-fields 1, :protocols #{datascript.btset/INode}, :name datascript.btset/Leaf, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 14, :type true, :column 10, :line 350, :record false, :end-line 350, :skip-protocol-flag nil}, sorted-arr-distinct? {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 199, :column 8, :end-line 199, :end-column 28, :private true, :arglists (quote ([arr cmp]))}, :private true, :name datascript.btset/sorted-arr-distinct?, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 28, :method-params ([arr cmp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 199, :end-line 199, :max-fixed-arity 2, :fn-var true, :arglists (quote ([arr cmp]))}, lookup-exact {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 80, :column 7, :end-line 80, :end-column 19, :arglists (quote ([cmp arr key]))}, :name datascript.btset/lookup-exact, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 19, :method-params ([cmp arr key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 3, :fn-var true, :arglists (quote ([cmp arr key]))}, arr-partition-approx {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 176, :column 8, :end-line 176, :end-column 28, :private true, :arglists (quote ([min-len max-len arr])), :doc "Splits `arr` into arrays of size between min-len and max-len,\n   trying to stick to (min+max)/2"}, :private true, :name datascript.btset/arr-partition-approx, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 28, :method-params ([min-len max-len arr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 3, :fn-var true, :arglists (quote ([min-len max-len arr])), :doc "Splits `arr` into arrays of size between min-len and max-len,\n   trying to stick to (min+max)/2"}, uninitialized-hash {:name datascript.btset/uninitialized-hash, :file "resources\\public\\js\\datascript\\btset.cljc", :line 408, :column 1, :end-line 408, :end-column 32, :const true, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 408, :column 14, :end-line 408, :end-column 32, :const true}}, return-array {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 229, :column 7, :end-line 229, :end-column 19, :arglists (quote ([a1] [a1 a2] [a1 a2 a3])), :doc "Drop non-nil references and return array of arguments", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a1] [a1 a2] [a1 a2 a3]), :arglists ([a1] [a1 a2] [a1 a2 a3]), :arglists-meta (nil nil nil)}}, :name datascript.btset/return-array, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a1] [a1 a2] [a1 a2 a3]), :arglists ([a1] [a1 a2] [a1 a2 a3]), :arglists-meta (nil nil nil)}, :method-params ([a1] [a1 a2] [a1 a2 a3]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 229, :end-line 229, :max-fixed-arity 3, :fn-var true, :arglists ([a1] [a1 a2] [a1 a2 a3]), :doc "Drop non-nil references and return array of arguments"}, slice {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 975, :column 7, :end-line 975, :end-column 12, :arglists (quote ([set key] [set key-from key-to])), :doc "When called with single key, returns iterator over set that contains all elements equal to the key.\n   When called with two keys (range), returns iterator for all X where key-from <= X <= key-to", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([set key] [set key-from key-to]), :arglists ([set key] [set key-from key-to]), :arglists-meta (nil nil)}}, :name datascript.btset/slice, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([set key] [set key-from key-to]), :arglists ([set key] [set key-from key-to]), :arglists-meta (nil nil)}, :method-params ([set key] [set key-from key-to]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 975, :end-line 975, :max-fixed-arity 3, :fn-var true, :arglists ([set key] [set key-from key-to]), :doc "When called with single key, returns iterator over set that contains all elements equal to the key.\n   When called with two keys (range), returns iterator for all X where key-from <= X <= key-to"}, Iter {:num-fields 5, :protocols #{cljs.core/IReversible cljs.core/IChunkedNext cljs.core/ISeq cljs.core/INext cljs.core/ISeqable cljs.core/IChunkedSeq cljs.core/IReduce}, :name datascript.btset/Iter, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 14, :type true, :column 10, :line 693, :record false, :end-line 693, :skip-protocol-flag #{cljs.core/IReversible cljs.core/IChunkedNext cljs.core/ISeq cljs.core/INext cljs.core/ISeqable cljs.core/IChunkedSeq cljs.core/IReduce}}, arr-map-inplace {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 168, :column 7, :end-line 168, :end-column 22, :arglists (quote ([f arr]))}, :name datascript.btset/arr-map-inplace, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 22, :method-params ([f arr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 168, :end-line 168, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f arr]))}, iter-first {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 749, :column 7, :end-line 749, :end-column 17, :arglists (quote ([iter]))}, :name datascript.btset/iter-first, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 17, :method-params ([iter]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 749, :end-line 749, :max-fixed-arity 1, :fn-var true, :arglists (quote ([iter]))}, lookup-range {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 88, :column 7, :end-line 88, :end-column 19, :arglists (quote ([cmp arr key]))}, :name datascript.btset/lookup-range, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 19, :method-params ([cmp arr key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 3, :fn-var true, :arglists (quote ([cmp arr key]))}, check-n-splice {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 163, :column 7, :end-line 163, :end-column 21, :arglists (quote ([cmp arr from to new-arr]))}, :name datascript.btset/check-n-splice, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 21, :method-params ([cmp arr from to new-arr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 163, :end-line 163, :max-fixed-arity 5, :fn-var true, :arglists (quote ([cmp arr from to new-arr]))}, node-disj {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 263, :column 4, :end-line 263, :end-column 13, :protocol datascript.btset/INode, :doc nil, :arglists (quote ([_ cmp key root? left right]))}, :protocol datascript.btset/INode, :name datascript.btset/node-disj, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 13, :method-params ([_ cmp key root? left right]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 256, :end-line 263, :max-fixed-arity 6, :fn-var true, :arglists (quote ([_ cmp key root? left right])), :doc nil}, rotate {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 265, :column 7, :end-line 265, :end-column 13, :arglists (quote ([node root? left right]))}, :name datascript.btset/rotate, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 13, :method-params ([node root? left right]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 265, :end-line 265, :max-fixed-arity 4, :fn-var true, :arglists (quote ([node root? left right]))}, binary-search-l {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\BrewersClj\\resources\\public\\js\\datascript\\btset.cljc", :line 57, :column 7, :end-line 57, :end-column 22, :arglists (quote ([cmp arr r k]))}, :name datascript.btset/binary-search-l, :variadic false, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 22, :method-params ([cmp arr r k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 4, :fn-var true, :arglists (quote ([cmp arr r k]))}, Node {:num-fields 2, :protocols #{datascript.btset/INode}, :name datascript.btset/Node, :file "resources\\public\\js\\datascript\\btset.cljc", :end-column 14, :type true, :column 10, :line 294, :record false, :end-line 294, :skip-protocol-flag nil}}, :require-macros {shim datascript.shim, datascript.shim datascript.shim}, :cljs.analyzer/constants {:seen #{:else}, :order [:else]}, :doc " B+ tree\n  -------\n\n  Leaf: keys[]     :: array of values\n\n  Node:     pointers[] :: links to children nodes\n            keys[]     :: max value for whole subtree\n                          node.keys[i] == max(node.pointers[i].keys)\n  All arrays are 64..128 elements, inclusive\n\n  BTSet:    root       :: Node or Leaf\n            shift      :: path bit-shift of root level, == (depth - 1) * level-shift\n            cnt        :: size of a set, integer, rolling\n            comparator :: comparator used for ordering\n            meta       :: clojure meta map\n            __hash     :: hash code, same as for clojure collections, on-demand, cached\n\n  Path: conceptually a vector of indexes from root to leaf value, but encoded in a single int.\n        E.g. we have path [7 53 11] representing root.pointers[7].pointers[3].keys[11].\n        In our case level-shift is 8, meaning each index will take 8 bits:\n        (7 << 16) | (53 << 8) | 11 = 472331\n        0000 0111   0011 0101   0000 1011\n\n  Iter:     set       :: Set this iterator belongs to\n            left      :: Current path\n            right     :: Right bound path (exclusive)\n            keys      :: Cached ref for keys array for a leaf\n            idx       :: Cached idx in keys array\n  Keys and idx are cached for fast iteration inside a leaf\n"}
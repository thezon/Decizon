;; Analyzed by ClojureScript 0.0-3291
{:use-macros nil, :excludes #{}, :name client.session-mang, :imports nil, :requires {per client.persistance, client.persistance client.persistance}, :uses nil, :defs {session {:name client.session-mang/session, :file "src\\client\\session_mang.cljs", :line 16, :column 1, :end-line 16, :end-column 13, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\Decizon\\src\\client\\session_mang.cljs", :line 16, :column 6, :end-line 16, :end-column 13}}, add-decision-result {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\Decizon\\src\\client\\session_mang.cljs", :line 29, :column 7, :end-line 29, :end-column 26, :arglists (quote ([result]))}, :name client.session-mang/add-decision-result, :variadic false, :file "src\\client\\session_mang.cljs", :end-column 26, :method-params ([result]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([result]))}, ->save-event {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\Decizon\\src\\client\\session_mang.cljs", :line 9, :column 12, :end-line 9, :end-column 22, :internal-ctor true, :factory :positional, :arglists (quote ([nav-key event-type working-record]))}, :name client.session-mang/->save-event, :variadic false, :file "src\\client\\session_mang.cljs", :end-column 22, :method-params ([nav-key event-type working-record]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 9, :end-line 9, :max-fixed-arity 3, :fn-var true, :arglists (quote ([nav-key event-type working-record]))}, get-id-value {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\Decizon\\src\\client\\session_mang.cljs", :line 40, :column 7, :end-line 40, :end-column 19, :arglists (quote ([name-key]))}, :name client.session-mang/get-id-value, :variadic false, :file "src\\client\\session_mang.cljs", :end-column 19, :method-params ([name-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([name-key]))}, load-decision {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\Decizon\\src\\client\\session_mang.cljs", :line 20, :column 7, :end-line 20, :end-column 20, :arglists (quote ([decision-data]))}, :name client.session-mang/load-decision, :variadic false, :file "src\\client\\session_mang.cljs", :end-column 20, :method-params ([decision-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([decision-data]))}, ->event {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\Decizon\\src\\client\\session_mang.cljs", :line 11, :column 12, :end-line 11, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([nav-key event-type working-record]))}, :name client.session-mang/->event, :variadic false, :file "src\\client\\session_mang.cljs", :end-column 17, :method-params ([nav-key event-type working-record]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 11, :end-line 11, :max-fixed-arity 3, :fn-var true, :arglists (quote ([nav-key event-type working-record]))}, session-value {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\Decizon\\src\\client\\session_mang.cljs", :line 35, :column 7, :end-line 35, :end-column 20, :arglists (quote ([list-key num]))}, :name client.session-mang/session-value, :variadic false, :file "src\\client\\session_mang.cljs", :end-column 20, :method-params ([list-key num]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([list-key num]))}, map->save-event {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\Decizon\\src\\client\\session_mang.cljs", :line 9, :column 12, :end-line 9, :end-column 22, :internal-ctor true, :factory :map, :arglists (quote ([G__20512]))}, :name client.session-mang/map->save-event, :variadic false, :file "src\\client\\session_mang.cljs", :end-column 22, :method-params ([G__20512]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__20512]))}, map->event {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\Decizon\\src\\client\\session_mang.cljs", :line 11, :column 12, :end-line 11, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__20520]))}, :name client.session-mang/map->event, :variadic false, :file "src\\client\\session_mang.cljs", :end-column 17, :method-params ([G__20520]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__20520]))}, session-param {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\Decizon\\src\\client\\session_mang.cljs", :line 43, :column 7, :end-line 43, :end-column 20, :arglists (quote ([param-key] [param-key value])), :doc "mang. session param. if vale supples then sets if no value supplied returns current value", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([param-key] [param-key value]), :arglists ([param-key] [param-key value]), :arglists-meta (nil nil)}}, :name client.session-mang/session-param, :variadic false, :file "src\\client\\session_mang.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([param-key] [param-key value]), :arglists ([param-key] [param-key value]), :arglists-meta (nil nil)}, :method-params ([param-key] [param-key value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 2, :fn-var true, :arglists ([param-key] [param-key value]), :doc "mang. session param. if vale supples then sets if no value supplied returns current value"}, event {:protocol-inline nil, :meta {:file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\NoCostMobileApp\\Development\\Decizon\\src\\client\\session_mang.cljs", :line 52, :column 7, :end-line 52, :end-column 12, :arglists (quote ([page-key options-map]))}, :name client.session-mang/event, :variadic false, :file "src\\client\\session_mang.cljs", :end-column 12, :method-params ([page-key options-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists (quote ([page-key options-map]))}, save-event {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name client.session-mang/save-event, :file "src\\client\\session_mang.cljs", :end-column 22, :type true, :column 12, :internal-ctor true, :line 9, :record true, :end-line 9, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:category :selected :navigate :working-list :new :name :item :edit :decision-edit :delete :page :category-edit :save :decision-new :decision-result-list :working-record :name-id :item-new :category-new :cancel :nav-key :item-list :event-type :decision :decision-id :item-edit}, :order [:nav-key :event-type :working-record :item-list :decision-result-list :navigate :page :decision :delete :name-id :working-list :selected :edit :decision-edit :save :name :cancel :new :decision-new :item :item-edit :item-new :decision-id :category :category-edit :category-new]}, :doc nil}